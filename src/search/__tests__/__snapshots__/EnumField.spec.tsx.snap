// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Enum field should render an enum field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EnumField
    field={
      Object {
        "dataType": "enum",
        "description": "Search by protein existence",
        "example": "1",
        "itemType": "single",
        "label": "Protein Existence [PE]",
        "term": "existence",
        "values": Array [
          Object {
            "name": "Evidence at protein level",
            "value": "1",
          },
          Object {
            "name": "Evidence at transcript level",
            "value": "2",
          },
        ],
      }
    }
    handleChange={[MockFunction]}
    queryInput={
      Object {
        "stringValue": "1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <label
        htmlFor="select_existence"
      >
        Protein Existence [PE]
        <select
          id="select_existence"
          onChange={[Function]}
        >
          <option
            value="1"
          >
            Evidence at protein level
          </option>
          <option
            value="2"
          >
            Evidence at transcript level
          </option>
        </select>
      </label>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Protein Existence [PE]",
          <select
            id="select_existence"
            onChange={[Function]}
          >
            <option
              value="1"
            >
              Evidence at protein level
            </option>
            <option
              value="2"
            >
              Evidence at transcript level
            </option>
          </select>,
        ],
        "htmlFor": "select_existence",
      },
      "ref": null,
      "rendered": Array [
        "Protein Existence [PE]",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <option
                value="1"
              >
                Evidence at protein level
              </option>,
              <option
                value="2"
              >
                Evidence at transcript level
              </option>,
            ],
            "id": "select_existence",
            "onChange": [Function],
            "value": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "select_1",
              "nodeType": "host",
              "props": Object {
                "children": "Evidence at protein level",
                "value": "1",
              },
              "ref": null,
              "rendered": "Evidence at protein level",
              "type": "option",
            },
            Object {
              "instance": null,
              "key": "select_2",
              "nodeType": "host",
              "props": Object {
                "children": "Evidence at transcript level",
                "value": "2",
              },
              "ref": null,
              "rendered": "Evidence at transcript level",
              "type": "option",
            },
          ],
          "type": "select",
        },
      ],
      "type": "label",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <label
          htmlFor="select_existence"
        >
          Protein Existence [PE]
          <select
            id="select_existence"
            onChange={[Function]}
          >
            <option
              value="1"
            >
              Evidence at protein level
            </option>
            <option
              value="2"
            >
              Evidence at transcript level
            </option>
          </select>
        </label>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Protein Existence [PE]",
            <select
              id="select_existence"
              onChange={[Function]}
            >
              <option
                value="1"
              >
                Evidence at protein level
              </option>
              <option
                value="2"
              >
                Evidence at transcript level
              </option>
            </select>,
          ],
          "htmlFor": "select_existence",
        },
        "ref": null,
        "rendered": Array [
          "Protein Existence [PE]",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="1"
                >
                  Evidence at protein level
                </option>,
                <option
                  value="2"
                >
                  Evidence at transcript level
                </option>,
              ],
              "id": "select_existence",
              "onChange": [Function],
              "value": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "select_1",
                "nodeType": "host",
                "props": Object {
                  "children": "Evidence at protein level",
                  "value": "1",
                },
                "ref": null,
                "rendered": "Evidence at protein level",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "select_2",
                "nodeType": "host",
                "props": Object {
                  "children": "Evidence at transcript level",
                  "value": "2",
                },
                "ref": null,
                "rendered": "Evidence at transcript level",
                "type": "option",
              },
            ],
            "type": "select",
          },
        ],
        "type": "label",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
