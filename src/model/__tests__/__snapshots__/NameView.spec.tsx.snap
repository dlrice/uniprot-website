// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NameView component should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NameView
    alternativeNames={
      Array [
        "name1",
        "name2",
        "name3",
      ]
    }
    name="Name"
    shortName="Short Name"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <strong>
          Name
        </strong>,
        " ",
        "Short Name",
        <div>
          name1, name2, name3
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Name",
        },
        "ref": null,
        "rendered": "Name",
        "type": "strong",
      },
      " ",
      "Short Name",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "name1, name2, name3",
        },
        "ref": null,
        "rendered": "name1, name2, name3",
        "type": "div",
      },
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <strong>
            Name
          </strong>,
          " ",
          "Short Name",
          <div>
            name1, name2, name3
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name",
          },
          "ref": null,
          "rendered": "Name",
          "type": "strong",
        },
        " ",
        "Short Name",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "name1, name2, name3",
          },
          "ref": null,
          "rendered": "name1, name2, name3",
          "type": "div",
        },
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
