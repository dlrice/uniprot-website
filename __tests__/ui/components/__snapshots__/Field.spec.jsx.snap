// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Clause component should render \`autocomplete\` field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    field={
      Object {
        "field": Object {
          "autoComplete": "https://www.ebi.ac.uk/proteins/api/selector?ec=?",
          "dataType": "string",
          "description": "Search by Enzyme EC number",
          "example": "1.1.2.3",
          "itemType": "single",
          "label": "Enzyme classification [EC]",
          "term": "ec",
        },
        "id": "autocomplete_field",
      }
    }
    handleInputChange={[Function]}
    handleRangeInputChange={[Function]}
    queryInput={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Clause component should render \`date\` field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    field={
      Object {
        "field": Object {
          "dataType": "date",
          "description": "Search by Date of creation",
          "example": "[2018-03-04 TO 2018-03-08]",
          "hasRange": true,
          "itemType": "single",
          "label": "Date Of Creation",
          "term": "created",
        },
        "id": "evidence_field",
        "queryInput": Object {},
      }
    }
    handleInputChange={[Function]}
    handleRangeInputChange={[Function]}
    queryInput={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Clause component should render \`enum\` field 1`] = `
"<div className=\\"advanced-search__inputs\\">
  <label htmlFor=\\"select_undefined\\">
    <select onChange={[Function: onChange]} id=\\"select_undefined\\" />
  </label>
</div>"
`;

exports[`Clause component should render \`evidence\` field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    field={
      Object {
        "field": Object {
          "autoComplete": "https://www.ebi.ac.uk/proteins/api/selector?chebi=?",
          "dataType": "string",
          "description": "Search by cofactor chebi ",
          "example": "29105",
          "hasEvidence": true,
          "itemType": "comment",
          "label": "ChEBI term",
          "term": "cofactor_chebi",
        },
        "id": "evidence_field",
        "queryInput": Object {},
      }
    }
    handleInputChange={[Function]}
    handleRangeInputChange={[Function]}
    queryInput={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Clause component should render \`range\` field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    field={
      Object {
        "field": Object {
          "dataType": "string",
          "description": "Search by feature sites",
          "example": "translocation",
          "hasRange": true,
          "itemType": "feature",
          "label": "Any",
          "term": "sites",
        },
        "id": "range_field",
        "queryInput": Object {},
      }
    }
    handleInputChange={[Function]}
    handleRangeInputChange={[Function]}
    queryInput={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Clause component should render \`string\` field 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Field
    field={
      Object {
        "dataType": "string",
        "description": "Search by UniProtKB Accession",
        "example": "P12345",
        "itemType": "single",
        "label": "UniProtKB AC",
        "term": "accession",
      }
    }
    handleInputChange={[Function]}
    handleRangeInputChange={[Function]}
    queryInput={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "accession",
    "nodeType": "host",
    "props": Object {
      "children": <label
        htmlFor="input_accession"
      >
        UniProtKB AC
        <input
          id="input_accession"
          onChange={[Function]}
          placeholder="P12345"
          type="text"
          value=""
        />
      </label>,
      "className": "advanced-search__inputs",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "UniProtKB AC",
          <input
            id="input_accession"
            onChange={[Function]}
            placeholder="P12345"
            type="text"
            value=""
          />,
        ],
        "htmlFor": "input_accession",
      },
      "ref": null,
      "rendered": Array [
        "UniProtKB AC",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "input_accession",
            "onChange": [Function],
            "placeholder": "P12345",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "label",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "accession",
      "nodeType": "host",
      "props": Object {
        "children": <label
          htmlFor="input_accession"
        >
          UniProtKB AC
          <input
            id="input_accession"
            onChange={[Function]}
            placeholder="P12345"
            type="text"
            value=""
          />
        </label>,
        "className": "advanced-search__inputs",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "UniProtKB AC",
            <input
              id="input_accession"
              onChange={[Function]}
              placeholder="P12345"
              type="text"
              value=""
            />,
          ],
          "htmlFor": "input_accession",
        },
        "ref": null,
        "rendered": Array [
          "UniProtKB AC",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "input_accession",
              "onChange": [Function],
              "placeholder": "P12345",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "label",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
