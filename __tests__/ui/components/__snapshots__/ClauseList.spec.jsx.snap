// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClauseList component should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ClauseList
    clauses={
      Array [
        Object {
          "field": Object {
            "dataType": "string",
            "example": "a4_human, P05067, cdc7 human",
            "id": "id_Any",
            "itemType": "single",
            "label": "Any",
            "term": "All",
          },
          "id": 2,
          "logicOperator": "AND",
          "queryInput": Object {},
        },
      ]
    }
    evidences={
      Object {
        "annotation": Object {
          "data": Array [],
          "isFetching": false,
        },
        "go": Object {
          "data": Array [],
          "isFetching": false,
        },
      }
    }
    handleRemoveClause={[MockFunction]}
    searchTerms={
      Object {
        "data": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "clause_2",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LogicalOperator
          handleChange={[Function]}
          value="AND"
        />,
        <e
          autocomplete={false}
          autocompleteFilter={true}
          autocompletePlaceholder=""
          data={
            Object {
              "data": Array [],
            }
          }
          onSelect={[Function]}
        />,
        <Field
          field={
            Object {
              "dataType": "string",
              "example": "a4_human, P05067, cdc7 human",
              "id": "id_Any",
              "itemType": "single",
              "label": "Any",
              "term": "All",
            }
          }
          handleInputChange={[Function]}
          handleRangeInputChange={[Function]}
          queryInput={Object {}}
        />,
        undefined,
        <button
          className="button-remove"
          onClick={[Function]}
          type="button"
        >
          Remove
        </button>,
      ],
      "className": "advanced-search__field",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleChange": [Function],
          "value": "AND",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autocomplete": false,
          "autocompleteFilter": true,
          "autocompletePlaceholder": "",
          "data": Object {
            "data": Array [],
          },
          "onSelect": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "field": Object {
            "dataType": "string",
            "example": "a4_human, P05067, cdc7 human",
            "id": "id_Any",
            "itemType": "single",
            "label": "Any",
            "term": "All",
          },
          "handleInputChange": [Function],
          "handleRangeInputChange": [Function],
          "queryInput": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Remove",
          "className": "button-remove",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Remove",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "clause_2",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LogicalOperator
            handleChange={[Function]}
            value="AND"
          />,
          <e
            autocomplete={false}
            autocompleteFilter={true}
            autocompletePlaceholder=""
            data={
              Object {
                "data": Array [],
              }
            }
            onSelect={[Function]}
          />,
          <Field
            field={
              Object {
                "dataType": "string",
                "example": "a4_human, P05067, cdc7 human",
                "id": "id_Any",
                "itemType": "single",
                "label": "Any",
                "term": "All",
              }
            }
            handleInputChange={[Function]}
            handleRangeInputChange={[Function]}
            queryInput={Object {}}
          />,
          undefined,
          <button
            className="button-remove"
            onClick={[Function]}
            type="button"
          >
            Remove
          </button>,
        ],
        "className": "advanced-search__field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleChange": [Function],
            "value": "AND",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autocomplete": false,
            "autocompleteFilter": true,
            "autocompletePlaceholder": "",
            "data": Object {
              "data": Array [],
            },
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "field": Object {
              "dataType": "string",
              "example": "a4_human, P05067, cdc7 human",
              "id": "id_Any",
              "itemType": "single",
              "label": "Any",
              "term": "All",
            },
            "handleInputChange": [Function],
            "handleRangeInputChange": [Function],
            "queryInput": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Remove",
            "className": "button-remove",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Remove",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
